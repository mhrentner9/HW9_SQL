DROP TABLE IF EXISTS dept_manager;
DROP TABLE IF EXISTS dept_emp;
DROP TABLE IF EXISTS titles;
DROP TABLE IF EXISTS salaries;
DROP TABLE IF EXISTS employees;
DROP TABLE IF EXISTS departments;

create table employees (
		emp_no int   NOT NULL,
		title_id varchar NOT NULL,
	    birth_date date   NOT NULL,
	    first_name varchar   NOT NULL,
	    last_name varchar   NOT NULL,
	    gender char(1)   NOT NULL,
	    hire_date date   NOT NULL,
		constraint pk_employees primary key (emp_no)
	);
	

	CREATE TABLE departments (
	    dept_no varchar   NOT NULL,
	    dept_name varchar   NOT NULL,	
		constraint pk_departments primary key (dept_no)
	);
		
	CREATE TABLE titles (
	    title_id varchar   NOT NULL,
	    title varchar   NOT NULL);
	

	CREATE TABLE dept_emp (
	    emp_no int   NOT NULL,
	    dept_no varchar   NOT NULL);
	

	ALTER TABLE dept_emp ADD CONSTRAINT fk_dept_emp_emp_no FOREIGN KEY(emp_no)
	REFERENCES employees (emp_no);
	ALTER TABLE dept_emp ADD CONSTRAINT fk_dept_emp_dept_no FOREIGN KEY(dept_no)
	REFERENCES departments (dept_no);
		
	CREATE TABLE salaries (
	    emp_no int   NOT NULL,
	    salary int   NOT NULL);
		
	ALTER TABLE salaries ADD CONSTRAINT fk_salaries_emp_no FOREIGN KEY(emp_no)
	REFERENCES employees (emp_no);
		
	CREATE TABLE dept_manager (
	    dept_no varchar   NOT NULL,
	    emp_no int   NOT NULL);
	

	ALTER TABLE dept_manager ADD CONSTRAINT fk_dept_manager_dept_no FOREIGN KEY(dept_no)
	REFERENCES departments (dept_no);
	

	ALTER TABLE dept_manager ADD CONSTRAINT fk_dept_manager_emp_no FOREIGN KEY(emp_no)
	REFERENCES employees (emp_no);


select * from departments;
select * from dept_emp;
select * from dept_manager;
select * from employees;
select * from salaries;
select* from titles;

-- 1. List the following details of each employee: employee number, last name, first name, gender, and salary.

SELECT 
e.emp_no,
e.last_name,
e.first_name,
e.gender,
s.salary
FROM employees e
JOIN salaries s
ON e.emp_no = s.emp_no;

-- 2. List employees who were hired in 1986. 

SELECT
hire_date
FROM employees
WHERE extract(year from hire_date) = '1986'; 

-- 3. List the manager of each department with the following information: department number, department name, 
-- the manager's employee number, last name, first name

SELECT
m.dept_no,
dept_name,
m.emp_no,
first_name,
last_name
FROM dept_manager m
LEFT JOIN departments on m.dept_no = departments.dept_no
LEFT JOIN employees on m.emp_no = employees.emp_no;

-- 4. List the department of each employee with the following information: employee number, last name, first name, and department name

SELECT
e.emp_no, 
first_name, 
last_name,
dept_name
FROM employees e
LEFT JOIN dept_emp d
ON e.emp_no = d.emp_no
LEFT JOIN departments
ON d.dept_no = departments.dept_no;

-- 5. List all employees whose first name is "Hercules" and last names begin with "B."

SELECT * FROM employees
WHERE(first_name LIKE 'Hercules' AND last_name LIKE '%B%');

-- 6. List all employees in the Sales department, including their employee number, last name, 
--first name, and department name.

Select
e.emp_no, 
first_name, 
last_name,
dept_name
FROM employees e
LEFT JOIN dept_emp d
ON e.emp_no = d.emp_no
LEFT JOIN departments
ON d.dept_no = departments.dept_no 
WHERE departments.dept_name lIKE 'Sales';

-- 7. List all employees in the Sales and Development departments, 
--including their employee number, last name, first name, and department name.

Select
e.emp_no, 
first_name, 
last_name,
dept_name
FROM employees e
LEFT JOIN dept_emp d
ON e.emp_no = d.emp_no
LEFT JOIN departments
ON d.dept_no = departments.dept_no 
WHERE departments.dept_name lIKE 'Sales'
OR departments.dept_name LIKE  'Development';

--8. In descending order, list the frequency count of employee last names, i.e.,
--how many employees share each last name.

SELECT
last_name,
COUNT(last_name) AS "name_count"
from employees
GROUP BY
last_name
ORDER BY name_count DESC;

